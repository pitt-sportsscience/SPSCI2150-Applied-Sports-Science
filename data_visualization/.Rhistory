geom_point(aes(color = Agility,
alpha = SprintSpeed)) +
scale_color_gradient(low = "gold",
high = 'darkred') +
theme(axis.title = element_text(size = 14, #increase font size
face = "bold"),#make font bold
axis.text.x = element_text(size = 13),
axis.text.y = element_text(size = 12),
legend.position = "top",
axis.line = element_line(color = "grey71"))
df %>%
ggplot(aes(x = Agility, y = SprintSpeed)) +
geom_point(aes(color = Agility,
alpha = SprintSpeed)) +
scale_color_gradient(low = "gold",
high = 'darkred') +
theme(axis.title = element_text(size = 14, #increase font size
face = "bold"),#make font bold
axis.text.x = element_text(size = 13),
axis.text.y = element_text(size = 12),
legend.position = "top",
axis.line = element_line(color = "grey71"))
df %>%
ggplot(aes(x = Agility, y = SprintSpeed)) +
geom_point(aes(color = Agility,
alpha = SprintSpeed)) +
scale_color_gradient(low = "gold",
high = 'darkred') +
theme(axis.title = element_text(size = 14, #increase font size
face = "bold"),#make font bold
axis.text.x = element_text(size = 13),
axis.text.y = element_text(size = 12),
legend.position = "top",
axis.line = element_line(color = "grey71"),
plot.background = element_blank())
df %>%
ggplot(aes(x = Agility, y = SprintSpeed)) +
geom_point(aes(color = Agility,
alpha = SprintSpeed)) +
scale_color_gradient(low = "gold",
high = 'darkred') +
theme(axis.title = element_text(size = 14, #increase font size
face = "bold"),#make font bold
axis.text.x = element_text(size = 13),
axis.text.y = element_text(size = 12),
legend.position = "top",
axis.line = element_line(color = "grey71"),
plot.background = element_blank(),
panel.background = element_blank())
df %>%
ggplot(aes(x = Agility, y = SprintSpeed)) +
geom_point(aes(color = Agility,
alpha = SprintSpeed)) +
scale_color_gradient(low = "gold",
high = 'darkred') +
theme(axis.title = element_text(size = 14, #increase font size
face = "bold"),#make font bold
axis.text.x = element_text(size = 13),
axis.text.y = element_text(size = 12),
legend.position = "top",
axis.line = element_line(color = "grey71"),
panel.background = element_blank())
df %>%
ggplot(aes(x = Agility, y = SprintSpeed)) +
geom_point(aes(color = Agility,
alpha = SprintSpeed)) +
scale_color_gradient(low = "gold",
high = 'darkred') +
theme(axis.title = element_text(size = 14, #increase font size
face = "bold"),#make font bold
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 13),
legend.position = "top",
axis.line = element_line(color = "grey71"),
panel.background = element_blank())
df %>%
ggplot(aes(x = Agility, y = SprintSpeed)) +
geom_point(aes(color = Agility,
alpha = SprintSpeed)) +
scale_color_gradient(low = "gold",
high = 'darkred') +
theme(axis.title.x = element_text(size = 14, #increase font size
face = "bold"),#make font bold
axis.title.y = element_text(size = 10,
face = "bold"),
axis.text = element_text(size = 12),
legend.position = "top",
axis.line = element_line(color = "grey71"),
panel.background = element_blank())
library(jsonlite)
df <- fromJSON('Clemson_NCAA_tournament_final2021.json')
View(df)
df <- fromJSON('Clemson_NCAA_tournament_final2021.json') %>% unnest(type, .drop = FALSE)
df <- fromJSON('Clemson_NCAA_tournament_final2021.json') %>% unnest(.drop = FALSE)
df <- fromJSON('Clemson_NCAA_tournament_final2021.json')[[1]] %>% unnest(type, .drop = FALSE)
View(df)
# visualize Clemson's shots on goal
df %>%
filter(!grepl("Clemson", team$name),
shot$isGoal != "NA") %>%
ggplot() +
ggsoccer::annotate_pitch() +
geom_point(aes(x = abs(location$x - 100),
y = location$y,
size = shot$xg,
color = shot$isGoal,
alpha = shot$isGoal)) +
labs(color = "Goal",
alpha = "Goal",
size = "xG") +
scale_alpha_manual(values = c(0.3, 0.75)) +
scale_color_manual(values = pitt_fill_colors) +
ggsoccer::theme_pitch() +
facet_wrap(~team$name) +
theme(legend.position = "right",
axis.title = element_blank(),
plot.title = element_text(size = 20, face = "bold"),
plot.subtitle = element_text(size = 16))
# visualize Clemson's shots on goal
df %>%
filter(!grepl("Clemson", team$name),
shot$isGoal != "NA") %>%
ggplot() +
ggsoccer::annotate_pitch() +
geom_point(aes(x = abs(location$x - 100),
y = location$y,
size = shot$xg,
color = shot$isGoal,
alpha = shot$isGoal)) +
labs(color = "Goal",
alpha = "Goal",
size = "xG") +
scale_alpha_manual(values = c(0.3, 0.75)) +
scale_color_manual(values = c("red", "darkgreen")) +
ggsoccer::theme_pitch() +
facet_wrap(~team$name) +
theme(legend.position = "right",
axis.title = element_blank(),
plot.title = element_text(size = 20, face = "bold"),
plot.subtitle = element_text(size = 16))
# visualize Clemson's shots on goal
df %>%
filter(grepl("Clemson", team$name),
shot$isGoal != "NA") %>%
ggplot() +
ggsoccer::annotate_pitch() +
geom_point(aes(x = abs(location$x - 100),
y = location$y,
size = shot$xg,
color = shot$isGoal,
alpha = shot$isGoal)) +
labs(color = "Goal",
alpha = "Goal",
size = "xG") +
scale_alpha_manual(values = c(0.3, 0.75)) +
scale_color_manual(values = c("red", "darkgreen")) +
ggsoccer::theme_pitch() +
facet_wrap(~team$name) +
theme(legend.position = "right",
axis.title = element_blank(),
plot.title = element_text(size = 20, face = "bold"),
plot.subtitle = element_text(size = 16))
# visualize Clemson's shots on goal
df %>%
filter(grepl("Clemson", team$name),
shot$isGoal != "NA") %>%
ggplot() +
ggsoccer::annotate_pitch() +
geom_point(aes(x = abs(location$x - 100),
y = location$y,
size = shot$xg,
color = shot$isGoal,
alpha = shot$isGoal)) +
labs(color = "Goal",
alpha = "Goal",
size = "xG") +
scale_alpha_manual(values = c(0.3, 0.75)) +
scale_color_manual(values = c("red", "darkgreen")) +
ggsoccer::theme_pitch() +
theme(legend.position = "right",
axis.title = element_blank(),
plot.title = element_text(size = 20, face = "bold"),
plot.subtitle = element_text(size = 16))
# visualize Clemson's shots on goal
df %>%
filter(!grepl("Clemson", team$name),
shot$isGoal != "NA") %>%
ggplot() +
ggsoccer::annotate_pitch() +
geom_point(aes(x = abs(location$x - 100),
y = location$y,
size = shot$xg,
color = shot$isGoal,
alpha = shot$isGoal)) +
labs(color = "Goal",
alpha = "Goal",
size = "xG") +
scale_alpha_manual(values = c(0.3, 0.75)) +
scale_color_manual(values = c("red", "darkgreen")) +
ggsoccer::theme_pitch() +
theme(legend.position = "right",
axis.title = element_blank(),
plot.title = element_text(size = 20, face = "bold"),
plot.subtitle = element_text(size = 16))
# visualize Clemson's shots on goal
df %>%
filter(shot$isGoal != "NA") %>%
ggplot() +
ggsoccer::annotate_pitch() +
geom_point(aes(x = abs(location$x - 100),
y = location$y,
size = shot$xg,
color = shot$isGoal,
alpha = shot$isGoal)) +
labs(color = "Goal",
alpha = "Goal",
size = "xG") +
scale_alpha_manual(values = c(0.3, 0.75)) +
scale_color_manual(values = c("red", "darkgreen")) +
ggsoccer::theme_pitch() +
facet_wrap(~team$name) +
theme(legend.position = "right",
axis.title = element_blank(),
plot.title = element_text(size = 20, face = "bold"),
plot.subtitle = element_text(size = 16))
# goal kicks
game %>%
filter(grepl("goal_kick", primary),
pass$accurate != "NA") %>%
mutate(Short = case_when(pass$length < 30 ~ "Short",
TRUE ~ "Long")) %>%
ggplot(aes(x = abs(location$x - 100), y = location$y)) +
annotate_pitch() +
geom_segment(aes(xend = abs(pass$endLocation$x - 100),
yend = pass$endLocation$y,
color = pass$accurate),
alpha = 0.5,
arrow = arrow(length = unit(0.05, "cm"))) +
labs(color = "Accurate") +
scale_color_manual(values = c("red", "darkgreen")) +
ggsoccer::theme_pitch() +
facet_wrap(~team$name) +
theme(axis.title = element_blank(),
legend.position = "none",
plot.title = element_text(size = 24, face = "bold"),
plot.subtitle = element_text(size = 16))
# goal kicks
df %>%
filter(grepl("goal_kick", primary),
pass$accurate != "NA") %>%
mutate(Short = case_when(pass$length < 30 ~ "Short",
TRUE ~ "Long")) %>%
ggplot(aes(x = abs(location$x - 100), y = location$y)) +
annotate_pitch() +
geom_segment(aes(xend = abs(pass$endLocation$x - 100),
yend = pass$endLocation$y,
color = pass$accurate),
alpha = 0.5,
arrow = arrow(length = unit(0.05, "cm"))) +
labs(color = "Accurate") +
scale_color_manual(values = c("red", "darkgreen")) +
ggsoccer::theme_pitch() +
facet_wrap(~team$name) +
theme(axis.title = element_blank(),
legend.position = "none",
plot.title = element_text(size = 24, face = "bold"),
plot.subtitle = element_text(size = 16))
# goal kicks
df %>%
filter(grepl("goal_kick", primary),
pass$accurate != "NA") %>%
mutate(Short = case_when(pass$length < 30 ~ "Short",
TRUE ~ "Long")) %>%
ggplot(aes(x = abs(location$x - 100), y = location$y)) +
annotate_pitch() +
geom_segment(aes(xend = abs(pass$endLocation$x - 100),
yend = pass$endLocation$y,
color = pass$accurate),
alpha = 0.5,
arrow = arrow(length = unit(0.05, "cm"))) +
labs(color = "Accurate") +
scale_color_manual(values = c("red", "darkgreen")) +
ggsoccer::theme_pitch() +
facet_wrap(~team$name) +
theme(axis.title = element_blank(),
legend.position = "none",
plot.title = element_text(size = 24, face = "bold"),
plot.subtitle = element_text(size = 16))
# goal kicks
df %>%
filter(grepl("goal_kick", primary),
pass$accurate != "NA") %>%
mutate(Short = case_when(pass$length < 30 ~ "Short",
TRUE ~ "Long")) %>%
ggplot(aes(x = abs(location$x - 100), y = location$y)) +
annotate_pitch() +
geom_segment(aes(xend = abs(pass$endLocation$x - 100),
yend = pass$endLocation$y,
color = pass$accurate),
alpha = 0.5,
arrow = arrow(length = unit(0.05, "cm"))) +
labs(color = "Accurate") +
scale_color_manual(values = c("red", "darkgreen")) +
ggsoccer::theme_pitch() +
facet_wrap(~team$name) +
theme(axis.title = element_blank(),
plot.title = element_text(size = 24, face = "bold"),
plot.subtitle = element_text(size = 16))
# goal kicks
df %>%
filter(grepl("goal_kick", primary),
pass$accurate != "NA") %>%
mutate(Short = case_when(pass$length < 30 ~ "Short",
TRUE ~ "Long")) %>%
ggplot(aes(x = abs(location$x - 100), y = location$y)) +
annotate_pitch() +
geom_segment(aes(xend = abs(pass$endLocation$x - 100),
yend = pass$endLocation$y,
color = pass$accurate),
alpha = 0.5,
arrow = arrow(length = unit(0.05, "cm"))) +
labs(color = "Accurate") +
scale_color_manual(values = c("red", "darkgreen")) +
ggsoccer::theme_pitch() +
facet_wrap(~team$name) +
theme(axis.title = element_blank(),
plot.title = element_text(size = 24, face = "bold"),
plot.subtitle = element_text(size = 16))
# visualize Clemson's shots
df_game %>%
filter(shot$isGoal != "NA") %>%
ggplot() +
ggsoccer::annotate_pitch() +
geom_density_2d_filled(aes(x = abs(location$x - 100),
y = location$y)) +
labs(color = "Goal",
alpha = "Goal",
size = "xG") +
scale_alpha_manual(values = c(0.3, 0.75)) +
scale_color_manual(values = c("red", "darkgreen")) +
ggsoccer::theme_pitch() +
facet_wrap(~team$name) +
theme(legend.position = "right",
axis.title = element_blank(),
plot.title = element_text(size = 20, face = "bold"),
plot.subtitle = element_text(size = 16))
# import the event-level data for the NCAA men's soccer tournament final 2021
df_game <- fromJSON('Clemson_NCAA_tournament_final2021.json')[[1]] %>% unnest(type, .drop = FALSE)
# visualize Clemson's shots
df_game %>%
filter(shot$isGoal != "NA") %>%
ggplot() +
ggsoccer::annotate_pitch() +
geom_point(aes(x = abs(location$x - 100),
y = location$y,
size = shot$xg,
color = shot$isGoal,
alpha = shot$isGoal)) +
labs(color = "Goal",
alpha = "Goal",
size = "xG") +
scale_alpha_manual(values = c(0.3, 0.75)) +
scale_color_manual(values = c("red", "darkgreen")) +
ggsoccer::theme_pitch() +
facet_wrap(~team$name) +
theme(legend.position = "right",
axis.title = element_blank(),
plot.title = element_text(size = 20, face = "bold"),
plot.subtitle = element_text(size = 16))
# visualize Clemson's shots
df_game %>%
filter(shot$isGoal != "NA") %>%
ggplot() +
ggsoccer::annotate_pitch() +
geom_point(aes(x = abs(location$x - 100),
y = location$y,
size = shot$xg,
color = shot$isGoal,
alpha = shot$isGoal)) +
labs(color = "Goal",
alpha = "Goal",
size = "xG") +
scale_alpha_manual(values = c(0.3, 0.75)) +
scale_color_manual(values = c("red", "darkgreen")) +
ggsoccer::theme_pitch() +
facet_wrap(~team$name) +
theme(legend.position = "right",
axis.title = element_blank(),
plot.title = element_text(size = 20, face = "bold"),
plot.subtitle = element_text(size = 16))
# goal kicks
df_game %>%
filter(grepl("goal_kick", primary),
pass$accurate != "NA") %>%
mutate(Short = case_when(pass$length < 30 ~ "Short",
TRUE ~ "Long")) %>%
ggplot(aes(x = abs(location$x - 100), y = location$y)) +
annotate_pitch() +
geom_segment(aes(xend = abs(pass$endLocation$x - 100),
yend = pass$endLocation$y,
color = pass$accurate),
alpha = 0.5,
arrow = arrow(length = unit(0.05, "cm"))) +
labs(color = "Accurate") +
scale_color_manual(values = c("red", "darkgreen")) +
ggsoccer::theme_pitch() +
facet_wrap(~team$name) +
theme(axis.title = element_blank(),
plot.title = element_text(size = 24, face = "bold"),
plot.subtitle = element_text(size = 16))
# visualize Clemson's shots
df_game %>%
filter(shot$isGoal != "NA") %>%
ggplot() +
ggsoccer::annotate_pitch() +
geom_density_2d_filled(aes(x = abs(location$x - 100),
y = location$y)) +
labs(color = "Goal",
alpha = "Goal",
size = "xG") +
scale_alpha_manual(values = c(0.3, 0.75)) +
scale_color_manual(values = c("red", "darkgreen")) +
ggsoccer::theme_pitch() +
facet_wrap(~team$name) +
theme(legend.position = "right",
axis.title = element_blank(),
plot.title = element_text(size = 20, face = "bold"),
plot.subtitle = element_text(size = 16))
# visualize Clemson's shots
df_game %>%
filter(shot$isGoal != "NA") %>%
ggplot() +
ggsoccer::annotate_pitch() +
geom_density_2d_filled(aes(x = abs(location$x - 100),
y = location$y),
alpha = 0.3) +
labs(color = "Goal",
alpha = "Goal",
size = "xG") +
scale_alpha_manual(values = c(0.3, 0.75)) +
scale_color_manual(values = c("red", "darkgreen")) +
ggsoccer::theme_pitch() +
facet_wrap(~team$name) +
theme(legend.position = "right",
axis.title = element_blank(),
plot.title = element_text(size = 20, face = "bold"),
plot.subtitle = element_text(size = 16))
# visualize Clemson's shots
df_game %>%
filter(shot$isGoal != "NA") %>%
ggplot() +
ggsoccer::annotate_pitch() +
geom_density_2d_filled(aes(x = abs(location$x - 100),
y = location$y),
alpha = 0.5) +
labs(color = "Goal",
alpha = "Goal",
size = "xG") +
scale_alpha_manual(values = c(0.3, 0.75)) +
scale_color_manual(values = c("red", "darkgreen")) +
ggsoccer::theme_pitch() +
facet_wrap(~team$name) +
theme(legend.position = "right",
axis.title = element_blank(),
plot.title = element_text(size = 20, face = "bold"),
plot.subtitle = element_text(size = 16))
# visualize Clemson's shots
df_game %>%
filter(shot$isGoal != "NA") %>%
ggplot() +
ggsoccer::annotate_pitch() +
geom_density_2d_filled(aes(x = abs(location$x - 100),
y = location$y),
alpha = 0.75) +
labs(color = "Goal",
alpha = "Goal",
size = "xG") +
scale_alpha_manual(values = c(0.3, 0.75)) +
scale_color_manual(values = c("red", "darkgreen")) +
ggsoccer::theme_pitch() +
facet_wrap(~team$name) +
theme(legend.position = "right",
axis.title = element_blank(),
plot.title = element_text(size = 20, face = "bold"),
plot.subtitle = element_text(size = 16))
# import packages
library(shiny)
library(tidyverse)
library(plyr)
library(shinyWidgets)
library(patchwork)
library(readxl)
library(cowplot)
library(dplyr)
library(ggplot2)
library(data.table)
library(forcats)
library(tidyr)
library(stringr)
library(pals)
library(lubridate)
library(DT)
library(plotly)
library(ggrepel)
library(shinyscreenshot)
library(scales)
library(janitor)
## add Pitt Badge
get_png <- function(filename) {
grid::rasterGrob(png::readPNG(filename), interpolate = TRUE)
}
l <- get_png("PittSoccerBadge.png")
