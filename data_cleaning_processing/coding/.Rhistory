getwd()
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(dplyr)
library(plyr)
library(tidyr)
library(lubridate)
library(forcats)
library(stringr)
library(ggplot2)
df <- read_csv('wellness_data.csv')
str(df)
dim(df)
head(df, 5)
tail(df, 5)
summary(df)
head(df, 10)
df_soreness <- df %>%
filter(segment != "NA")
dim(df_soreness)
df_wellness <- df %>%
filter(Sleep_Duration_h != "NA")
dim(df_wellness)
df_wellness2 <- df %>%
drop_na(Sleep_Duration_h)
dim(df_wellness2)
df_wellness2 <- df %>%
drop_na(Sleep_Duration_h)
dim(df_wellness2)
df_wellness_short <- df_wellness %>%
select(-`Body Map Pain`, -`Body Map Soreness`, -segment)
dim(df_wellness_short)
str(df_wellness_short$date)
df_wellness_short <- df_wellness_short %>%
mutate(date = as.Date(date, format = "%m/%d/%y")) #the format in which the date is presented, in this case month/day/year
str(df_wellness_short)
df_wellness_short %>%
ggplot(aes(y = Sleep_Duration_h)) + #create the structure of the graph and specify sleep as the y-variable
geom_boxplot()
df_outlier <- df %>%
filter(Sleep_Duration_h <= 3)
dim(df_outlier)
head(df_outlier, 4)
df_clean <- df %>%
filter(Sleep_Duration_h > 3)
df_clean %>%
ggplot(aes(y = Sleep_Duration_h)) +
geom_boxplot()
df_clean %>%
ggplot(aes(y = Sleep_Duration_h)) + #specify sleep as the y-variable
geom_boxplot(aes(fill = user_uid)) + #specify the color of the boxplot based on each individual athlete
facet_wrap(~user_uid,
scales = "free_y") + #create one boxplot per individual athlete
theme(legend.position = "none")
#outlier removal for one individual athlete
df_clean_individual <- df %>%
mutate(Sleep_Duration_h = ifelse(user_uid == "0hckqtkj0eypznvd" & Sleep_Duration_h > 9, NA, Sleep_Duration_h))
df_clean_individual %>%
filter(user_uid == "0hckqtkj0eypznvd") %>%
ggplot(aes(y = Sleep_Duration_h)) + #specify sleep as the y-variable
geom_boxplot(aes(fill = user_uid)) + #specify the color of the boxplot based on each individual athlete
facet_wrap(~user_uid,
scales = "free_y") + #create one boxplot per individual athlete
theme(legend.position = "none")
#maximum
max(df_clean$Sleep_Duration_h)
#minimum
min(df_clean$Sleep_Duration_h)
#median
median(df_clean$Sleep_Duration_h)
#mean
mean(df_clean$Sleep_Duration_h)
#sd
sd(df_clean$Sleep_Duration_h)
#maximum
max(df$Sleep_Duration_h)
#minimum
min(df$Sleep_Duration_h)
#median
median(df$Sleep_Duration_h)
#mean
mean(df$Sleep_Duration_h)
#sd
sd(df$Sleep_Duration_h)
df_wellness_short %>%
ggplot(aes(x = Sleep_Duration_h)) +
geom_histogram()
df_clean %>%
ggplot(aes(x = Sleep_Duration_h)) +
geom_histogram()
# summarize by athlete
df_clean %>%
dplyr::group_by(user_uid) %>%
dplyr::summarise(Sleep_mean = mean(Sleep_Duration_h),
Sleep_median = median(Sleep_Duration_h),
Sleep_max = max(Sleep_Duration_h),
Sleep_min = min(Sleep_Duration_h),
Sleep_sd = sd(Sleep_Duration_h))
# summarize by date
df_clean %>%
filter(date < "2022-10-01") %>% #filter more recent dates to avoid to large outcomes
dplyr::group_by(date) %>%
dplyr::summarise(Sleep_mean = mean(Sleep_Duration_h),
Sleep_median = median(Sleep_Duration_h),
Sleep_max = max(Sleep_Duration_h),
Sleep_min = min(Sleep_Duration_h),
Sleep_sd = sd(Sleep_Duration_h))
# summarize by date and athlete
df_clean %>%
filter(date < "2022-10-01") %>% #filter more recent dates to avoid to large outcomes
dplyr::group_by(date, user_uid, ) %>%
dplyr::summarise(Sleep_mean = mean(Sleep_Duration_h),
Sleep_median = median(Sleep_Duration_h),
Sleep_max = max(Sleep_Duration_h),
Sleep_min = min(Sleep_Duration_h),
Sleep_sd = sd(Sleep_Duration_h))
colnames(df_clean)
colnames(df_soreness)
colnames(df_soreness)
df_soreness_columns <- df_soreness
colnames(df_soreness_columns) <- c("date", "segment", "user_uid", "Body_Map_Soreness", "Body_Map_Pain",
"Sleep_Duration_h", "Meals", "Snacks", "Drinks", "Fatigue",
"RPE_Physical", "RPE_Mental", "Good_stress", "Bad_stress", "Name")
colnames(df_soreness_columns)
colnames(df_soreness)
df_soreness_columns <- df_soreness
colnames(df_soreness_columns) <- c("date", "segment", "user_uid", "Body_Map_Soreness", "Body_Map_Pain",
"Sleep_Duration_h", "Meals", "Snacks", "Drinks", "Fatigue",
"RPE_Physical", "RPE_Mental", "Good_stress", "Bad_stress", "Name")
# make the same call again
head(df_soreness_columns, 5)
x <- 1
y <- 4
x + y
x_string <- "test"
x_string
x_string_num <- "1"
y_string_num <- "4"
x_string_num + y_string_num
df_explained <- data.frame(Day = "Wednesday", Excitement = 100, Regret = 0)
df_explained
first_vector <- c(1, 2, 3, y)
first_vector
first_vector <- c(1, 2, 3, y, 5, 6, 7, y*2)
first_vector
df_explained <- data.frame(Day = c("Wednesday", "Thursday", "Friday", "Saturday"),
Excitement = c(100, 100, 100, 0),
Regret = c(0, 0, 0, 90))
df_explained
c(1, "1", 3, "test")
bad_vector <- c(1, "1", 3, "test")
bad_vector
head(df_halloween, 5)
df_halloween <- data.frame(Day = c("Wednesday", "Thursday", "Friday", "Saturday"),
Excitement = c(100, 100, 100, 0),
Regret = c(0, 0, 0, 90))
df_halloween
head(df_halloween, 5)
view(df_halloween)
View(df_halloween)
View(df_halloween)
head(df_halloween)
head(df_halloween)
# long to wide
df_halloween_wide <- df_halloween %>%
pivot_wider(names_from = Day, values_from = Regret)
head(df_halloween)
# long to wide
df_halloween_wide <- df_halloween %>%
pivot_wider(names_from = Day, values_from = Regret)
df_halloween_wide
head(df_halloween)
# long to wide
df_halloween_wide <- df_halloween %>%
pivot_wider(names_from = Day, values_from = c(Excitement, Regret))
df_halloween_wide
df_halloween_long <- df_halloween_wide %>%
gather(key = "key", value = "value")
head(df_halloween)
# long to wide
df_halloween_wide <- df_halloween %>%
pivot_wider(names_from = Day, values_from = c(Excitement, Regret))
df_halloween_wide
df_halloween_long <- df_halloween_wide %>%
gather(key = "key", value = "value")
df_halloween_long
